    - name: Create /var/log/mysql  host directory if it does not exist
      file:
        path: /var/log/mysql
        state: directory
        owner: mysql
        group:  mysql




    - name: Template my.cnf file to /etc/my.cnf
      template:
          src: mysql_slave_my.cnf.j2
          dest: /etc/my.cnf
          owner: root
          group:  root
      notify:
        restart mysql service

    - name: Create db user for replication
      mysql_user:
        login_user: root
        login_password: '{{mysql_root_password}}'
        name: '{{mysql_replication_user}}'
        password: '{{mysql_repluser_pass}}'
        host: localhost
        priv: "*.*:REPLICATION CLIENT"
        state: present


    - name: Check slave replication status.
      mysql_replication:
        mode: getslave
        login_user: '{{mysql_replication_user}}'
        login_password: '{{mysql_repluser_pass}}'
      ignore_errors: true
      register: slave

    - name: Check master replication status.
      mysql_replication: 
        mode: getmaster
        login_user: '{{mysql_replication_user}}'
        login_password: '{{mysql_repluser_pass}}'
        login_host:  '{{mysql_master_ip}}'
      register: master

    - name: Stop Slave
      mysql_replication: 
        mode: stopslave
        login_user: root
        login_password: '{{mysql_root_password}}'


    - name: Configure replication on the slave.
      mysql_replication:
        mode: changemaster
        login_user: root
        login_password: '{{mysql_root_password}}'
        master_host: '{{ mysql_master_ip }}'
        master_user: '{{ mysql_replication_user }}'
        master_password: '{{ mysql_repluser_pass }}'
        master_log_file: '{{ master.File }}'
        master_log_pos: '{{ master.Position }}'
      # ignore_errors: true

    - name: Start Slave
      mysql_replication: 
        mode: startslave
        login_user: root
        login_password: '{{mysql_root_password}}'


    - name: Check slave replication status.
      mysql_replication:
        mode: getslave
        login_user: '{{ mysql_replication_user }}'
        login_password: '{{ mysql_repluser_pass }}'
      ignore_errors: true
      register: slave


  # handlers:



  #   - name: restart mysql service
  #     systemd:
  #         state: restarted
  #         daemon_reload: yes
  #         name: mysql
